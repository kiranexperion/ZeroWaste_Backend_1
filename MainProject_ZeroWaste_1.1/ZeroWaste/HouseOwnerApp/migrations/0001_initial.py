# Generated by Django 3.2.16 on 2022-11-29 12:35

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CorporationApp', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='wards',
            fields=[
                ('wardno', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('wardname', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='houseowner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200, unique=True)),
                ('phoneno', models.CharField(max_length=200, unique=True)),
                ('address', models.CharField(max_length=1000)),
                ('pincode', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('wardno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HouseOwnerApp.wards')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='slotbooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_date', models.DateField()),
                ('booking_date', models.DateField()),
                ('houseowner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('waste_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CorporationApp.wastes')),
            ],
        ),
        migrations.CreateModel(
            name='bookingstatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wastecollector_id', models.IntegerField(default=100)),
                ('status', models.CharField(default='waiting for collection', max_length=200)),
                ('collected_date', models.DateField()),
                ('slot_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HouseOwnerApp.slotbooking')),
            ],
        ),
    ]
